@page "/fetchdata"
@using FluxorWithBlazor.Model
@inject IDispatcher dispatcher
@inject IState<WeatherState> weather
@inherits Fluxor.Blazor.Web.Components.FluxorComponent
<PageTitle>Weather forecast</PageTitle>

<h1>Weather forecast</h1>

<p>This component demonstrates fetching data from the server.</p>

@if (weather.Value.IsLoading)
{
	<p><em>Loading...</em></p>
}
else
{
	<table class="table">
		<thead>
			<tr>
				<th>Date</th>
				<th>Temp. (C)</th>
				<th>Temp. (F)</th>
				<th>Summary</th>
			</tr>
		</thead>
		<tbody>
			@foreach (var forecast in weather.Value.Forecasts)
			{
			<tr>
				<td>@forecast.Date.ToShortDateString()</td>
				<td>@forecast.TemperatureC</td>
				<td>@forecast.TemperatureF</td>
				<td>@forecast.Summary</td>
			</tr>
			}
		</tbody>
	</table>
}


<h1>Syncfusion DataTable</h1>
<div class="col-lg-12 control-section">

    <div class="content-wrapper">
        <div class="row">

            <SfGrid DataSource="@weather.Value.Forecasts" AllowPaging="true"
                    AllowReordering="true"
                    Toolbar="@ToolbarItems">
                <GridEditSettings AllowAdding="true" AllowEditing="true" AllowDeleting="true"></GridEditSettings>
                <GridColumns>
                    <GridColumn Field=@nameof(WeatherForecast.Date)
                                HeaderText="Order ID"
                                IsPrimaryKey="true"
                                CustomAttributes="@(new Dictionary<string, object>(){ { "class", "e-attr" }})"
                                Width="120"
                                AllowReordering="false">
                    </GridColumn>

                    <GridColumn Field=@nameof(WeatherForecast.TemperatureC)
                                HeaderText="Customer Name"
                                CustomAttributes="@(new Dictionary<string, object>(){ { "class", "e-attr" }})"
                                Width="150">
                    </GridColumn>

                    <GridColumn Field=@nameof(WeatherForecast.Date)
                                HeaderText=" Order Date"
                                CustomAttributes="@(new Dictionary<string, object>(){ { "class", "e-attr" }})"
                                Format="d" Type="ColumnType.Date"
                                EditType="EditType.DatePickerEdit"
                                Width="130">
                    </GridColumn>

                    <GridColumn Field=@nameof(OrderDto.Freight)
                                HeaderText="Freight"
                                CustomAttributes="@(new Dictionary<string, object>(){ { "class", "e-attr" }})"
                                Format="C2"
                                Width="120">
                    </GridColumn>

                    <GridColumn Field=@nameof(OrderDto.ShipCountry)
                                HeaderText="ShipCountry"
                                CustomAttributes="@(new Dictionary<string, object>(){ { "class", "e-attr" }})"
                                Width="120">
                    </GridColumn>

                    <GridColumn Field=@nameof(OrderDto.Verified)
                                DisplayAsCheckBox="true"
                                Width="50"
                                AllowReordering="false">
                    </GridColumn>
                </GridColumns>
            </SfGrid>
        </div>
    </div>
</div>


<style>


    .e-grid .e-headercell {
        background-color: darkturquoise;
    }

    .e-headercell {
        color: slategray;
        font-size: 1.5rem;
        font-weight: bold;
        text-align: center;
    }

    .e-grid .e-gridheader .e-headercell.e-attr .e-headercelldiv {
        text-align: center !important;
    }

    .e-attr {
        text-align: center !important;
    }
</style>


@code {

	protected override void OnInitialized()
	{
		base.OnInitialized();
		dispatcher.Dispatch(new FetchDataAction());
	}
}
