@inherits Fluxor.Blazor.Web.Components.FluxorComponent

@page "/todos"


@using Blazzor_Wa_Sync_Fluxor.Todos.Models.Todos.Dtos
@using Blazzor_Wa_Sync_Fluxor.Todos.Store.State
@using Blazzor_Wa_Sync_Fluxor.Todos.Services

@inject IState<TodosState> TodosState
@inject StateFacade Facade
@inject NavigationManager Navigation

<h3 class="text-center mb-3">Todos</h3>

@if (TodosState.Value.IsLoading)
{
    <div class="d-flex flex-row justify-content-center">
        <div class="spinner-border" role="status">
            <span class="sr-only">Loading...</span>
        </div>
    </div>
}
else if (TodosState.Value.HasCurrentErrors || TodosState.Value.CurrentTodos is null)
{
    <div class="d-flex flex-column align-items-center">
        <span class="py-2">Whoops! Looks like an issue occurred loading todos :(</span>
        <button class="btn btn-info py-2" @onclick="() => Facade.LoadTodos()">Reload Todos</button>
    </div>
}
else if (!TodosState.Value.CurrentTodos.Any())
{
    <CreateTodoForm />

    <div class="d-flex flex-column align-items-center mt-2">
        <span class="py-2">Looks like there's no todos...</span>
        <button class="btn btn-info py-2" @onclick="() => Facade.LoadTodos()">Reload Todos</button>
    </div>
}
else
{
    <CreateTodoForm />
         <h1>Syncfusion DataTable</h1>
        <div class="col-lg-12 control-section">

            <div class="content-wrapper">
                <div class="row">

                <SfGrid Toolbar="@(new List<string>() { "Add", "Edit", "Delete", "Cancel", "Update" })"
                            DataSource="@TodosState.Value.CurrentTodos"
                            AllowSorting="true"
                            AllowFiltering="true"
                            AllowPaging="true"
                            EnableHover="false"
                            AllowExcelExport="true">
                            <GridPageSettings PageSize="5" />
                        <GridSelectionSettings EnableToggle="false"></GridSelectionSettings>
                        <GridEvents OnActionBegin="@ActionBeginHandler" OnActionComplete="ActionCompleteHandler" />
                        <GridEditSettings AllowAdding="true" AllowDeleting="true" AllowEditing="true" Mode="EditMode.Dialog" ShowDeleteConfirmDialog="true">
                    </GridEditSettings>
                    <GridColumns>
                        <GridColumn Field=@nameof(TodosState.Value.CurrentTodo.Id)
                                HeaderText="Id"
                                CustomAttributes="@(new Dictionary<string, object>(){ { "class", "e-attr" }})"
                                IsPrimaryKey="true"
                                Width="30">
                            </GridColumn>
                        <GridColumn Field=@nameof(TodosState.Value.CurrentTodo.Title)
                                HeaderText="Title"
                                CustomAttributes="@(new Dictionary<string, object>(){ { "class", "e-attr" }})"
                                Width="50">
                            </GridColumn>

                        <GridColumn Field=@nameof(TodosState.Value.CurrentTodo.Completed)
                                HeaderText="Completed"
                                DisplayAsCheckBox="true"
                                CustomAttributes="@(new Dictionary<string, object>(){ { "class", "e-attr" }})"
                                Width="50">
                            </GridColumn>

                        <GridColumn Field=@nameof(TodosState.Value.CurrentTodo.UserId)
                                HeaderText="UserId"
                                CustomAttributes="@(new Dictionary<string, object>(){ { "class", "e-attr" }})"
                                Width="50">
                            </GridColumn>
                              <GridColumn HeaderText="Todo profile" TextAlign="TextAlign.Center" Width="120">
                            <Template>
                                @{
                                    var TodoView = (context as TodoDto);
                                    <div><a href="#" @onclick="@(() => NavigateToTodoDetail(TodoView.Id))">View</a></div>
                                }
                            </Template>
                        </GridColumn>

                        </GridColumns>
                    </SfGrid>
                </div>
            </div>
        </div>

    <table class="table table-hover mt-2">
        <thead>
            <tr class="text-center">
                <th scope="col">ID</th>
                <th scope="col">Title</th>
                <th scope="col">Completed</th>
                <th scope="col">User ID</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var todo in TodosState.Value.CurrentTodos)
            {
                <tr style="cursor: pointer;" class="text-center" @onclick="() => NavigateToTodoDetail(todo.Id)">
                    <td>@todo.Id</td>
                    <td>@todo.Title</td>
                    <td>@todo.Completed</td>
                    <td>@todo.UserId</td>
                </tr>
            }
        </tbody>
    </table>
}

@code {


    protected override void OnInitialized()
    {
        // Issue the load todos command, if no current todos have been loaded
        if (TodosState.Value.CurrentTodos is null)
        {
            Facade.LoadTodos();
        }

        base.OnInitialized();
    }

    public void ActionBeginHandler(ActionEventArgs<TodoDto?> args)
    {
        if (args.Type == "actionBegin")
            if (args.Action == "edit")
            {
                if (args.RequestType == Syncfusion.Blazor.Grids.Action.Save)
                {
                    var d = args.Data;
                }
            }
    }

    public void ActionCompleteHandler(ActionEventArgs<TodoDto> args)
    {
        if (args.Type == "actionComplete")
            if (args.Action == "add-delete-success")
            {
                if (args.RequestType == Syncfusion.Blazor.Grids.Action.Save)
                {
                }
                else if (args.RequestType == Syncfusion.Blazor.Grids.Action.Delete)
                {
                    // Delete Record
                    var d = args.Data;
                }
            }
    }

    public void NavigateToTodoDetail(int id)
    {
        Navigation.NavigateTo($"todos/{id}");
    }

}


<style>


    .e-grid .e-headercell {
        background-color: darkturquoise;
    }

    .e-headercell {
        color: slategray;
        font-size: 1.5rem;
        font-weight: bold;
        text-align: center;
    }

    .e-grid .e-gridheader .e-headercell.e-attr .e-headercelldiv {
        text-align: center !important;
    }

    .e-attr {
        text-align: center !important;
    }
</style>

