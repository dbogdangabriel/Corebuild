@inherits Fluxor.Blazor.Web.Components.FluxorComponent

@page "/SyncfusionTable"
@using BlazorSyncfusion.Models
@using BlazorSyncfusion.Models.Orders.Dtos
@using Fluxor
@using BlazorSyncfusion.Store.State
@using BlazorSyncfusion.Services

@inject IState<OrdersState> OrdersState
@inject StateFacade Facade
@inject NavigationManager Navigation

<h3 class="text-center mb-3">Todos</h3>

@if (OrdersState.Value.IsLoading)
{
    <div class="d-flex flex-row justify-content-center">
        <div class="spinner-border" role="status">
            <span class="sr-only">Loading...</span>
        </div>
    </div>
}
else if (OrdersState.Value.HasCurrentErrors || OrdersState.Value.CurrentOrders is null)
{
    <div class="d-flex flex-column align-items-center">
        <span class="py-2">Whoops! Looks like an issue occurred loading orders :(</span>
        <button class="btn btn-info py-2" @onclick="() => Facade.LoadOrders()">Reload Orders</button>
    </div>
}
else if (!OrdersState.Value.CurrentOrders.Any())
{
    <CreateOrderForm />

    <div class="d-flex flex-column align-items-center mt-2">
        <span class="py-2">Looks like there's no orders...</span>
        <button class="btn btn-info py-2" @onclick="() => Facade.LoadOrders()">Reload Orders</button>
    </div>
}
else
{
    <CreateOrderForm />

    <table class="table table-hover mt-2">
        <thead>
            <tr class="text-center">
                <th scope="col">ID</th>
                <th scope="col">Title</th>
                <th scope="col">Completed</th>
                <th scope="col">User ID</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var order in OrdersState.Value.CurrentOrders)
            {
                <tr style="cursor: pointer;" class="text-center" @onclick="() => NavigateToOrderDetail(order.Id)">
                    <td>@order.Id</td>
                    <td>@order.Title</td>
                    <td>@order.Completed</td>
                    <td>@order.UserId</td>
                </tr>
            }
        </tbody>
    </table>
}
@*

<h1>Syncfusion DataTable</h1>
<div class="col-lg-12 control-section">

    <div class="content-wrapper">
        <div class="row">

            <SfGrid DataSource="@OrdersState.Value.CurrentOrders" AllowPaging="true"
                    AllowReordering="true"
                    Toolbar="@ToolbarItems">
                <GridEditSettings AllowAdding="true" AllowEditing="true" AllowDeleting="true"></GridEditSettings>
                <GridColumns>
                    <GridColumn Field=@nameof(OrderDto.OrderID)
                                HeaderText="Order ID"
                                IsPrimaryKey="true"
                                CustomAttributes="@(new Dictionary<string, object>(){ { "class", "e-attr" }})"
                                Width="120"
                                AllowReordering="false">
                    </GridColumn>

                    <GridColumn Field=@nameof(OrderDto.CustomerID)
                                HeaderText="Customer Name"
                                CustomAttributes="@(new Dictionary<string, object>(){ { "class", "e-attr" }})"
                                Width="150">
                    </GridColumn>

                    <GridColumn Field=@nameof(OrderDto.OrderDate)
                                HeaderText=" Order Date"
                                CustomAttributes="@(new Dictionary<string, object>(){ { "class", "e-attr" }})"
                                Format="d" Type="ColumnType.Date"
                                EditType="EditType.DatePickerEdit"
                                Width="130">
                    </GridColumn>

                    <GridColumn Field=@nameof(OrderDto.Freight)
                                HeaderText="Freight"
                                CustomAttributes="@(new Dictionary<string, object>(){ { "class", "e-attr" }})"
                                Format="C2"
                                Width="120">
                    </GridColumn>

                    <GridColumn Field=@nameof(OrderDto.ShipCountry)
                                HeaderText="ShipCountry"
                                CustomAttributes="@(new Dictionary<string, object>(){ { "class", "e-attr" }})"
                                Width="120">
                    </GridColumn>

                    <GridColumn Field=@nameof(OrderDto.Verified)
                                DisplayAsCheckBox="true"
                                Width="50"
                                AllowReordering="false">
                    </GridColumn>
                </GridColumns>
            </SfGrid>
        </div>
    </div>
</div>


<style>


    .e-grid .e-headercell {
        background-color: darkturquoise;
    }

    .e-headercell {
        color: slategray;
        font-size: 1.5rem;
        font-weight: bold;
        text-align: center;
    }

    .e-grid .e-gridheader .e-headercell.e-attr .e-headercelldiv {
        text-align: center !important;
    }

    .e-attr {
        text-align: center !important;
    }
</style>
*@